# Copyright (C) 2024 quip.network
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: "3.11"
            build_rust: "0"
            wheel_type: "pure-python"
          - os: windows-latest
            python: "3.11"
            build_rust: "1"
            wheel_type: "rust-accelerated"
          - os: macos-latest
            python: "3.11"
            build_rust: "1"
            wheel_type: "rust-accelerated"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Rust (if building Rust extension)
        if: matrix.build_rust == '1'
        uses: dtolnay/rust-toolchain@stable

      - name: Clean any existing build artifacts
        shell: bash
        run: |
          rm -rf build/ dist/ *.egg-info/ hashsigs/_rust*.so hashsigs/_rust*.pyd hashsigs/__pycache__/
          find . -name "*.pyc" -delete 2>/dev/null || true
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools-rust

      - name: Build wheel (${{ matrix.wheel_type }})
        env:
          HASHSIGS_BUILD_RUST: ${{ matrix.build_rust }}
        run: python -m build --wheel --outdir dist/

      - name: Test wheel
        run: |
          pip install pycryptodome pytest pytest-cov
          pip install dist/*.whl
          python -c "import hashsigs; print('Package imported successfully')"
          pytest tests/test_pure_python_basic.py -v

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.wheel_type }}
          path: dist/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build sdist
        run: pipx run build --sdist
      
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload-pypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'testpypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/hashsigs' || 'https://pypi.org/p/hashsigs' }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: dist
          merge-multiple: true
      
      - name: Publish to Test PyPI
        if: github.event.inputs.test_pypi == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
      
      - name: Publish to PyPI
        if: github.event.inputs.test_pypi != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
